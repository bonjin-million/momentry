firebase_app_id = "1:569027132834:ios:9e62054e8f43a1c6a2c6fb"
firebase_token = "1//0ef3CcFU9HLwiCgYIARAAGA4SNwF-L9IrrrwKrHyk03MlaSCSdnaIY0X_EfgVEoZvYmvzbOLuiwaiA1_2Ij8TcRIUZtJKuFksq2A"
firebase_udids_file = "tester_udids.txt"

default_platform(:ios)

ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"] = "yvnk-dglh-leqa-wygc"

# Match 인증 함수
# passphrase: Password1234!@#$
# Password (for bonjin.app@gmail.com): Password1234!@#$
# Password for login keychain: Password1234!@#$
# Password: Password1234!@#$
platform :ios do

  desc "build app and release to Firebase Distribution"
  lane :distribute do
    firebase_app_distribution_get_udids(
      app: firebase_app_id,
      output_file: firebase_udids_file
    )
    add_new_devices
    sh("flutter", "build", "ios", "--release", "--no-codesign")

    match(
      type: "adhoc",
    )

    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "ad-hoc",
      clean: true
    )

    firebase_app_distribution(
      app: firebase_app_id,
      groups: "qa-team",
      release_notes: "build app and release to Firebase Distribution",
      firebase_cli_token: firebase_token,
      debug: true
    )
  end


  # Firebase Distribution에 등록된 UDID목록 다운로드
  lane :download_udids do
    firebase_app_distribution_get_udids(
      app: firebase_app_id,
      output_file: firebase_udids_file
    )
  end

  # 다운로드 된 UDID목록을 Apple Device에 등록
  lane :add_new_devices do
    register_devices(devices_file: firebase_udids_file)
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    build_app(workspace: "Runner.xcworkspace", scheme: "Runner")
    upload_to_testflight
  end
end
