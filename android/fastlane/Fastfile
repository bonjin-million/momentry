firebase_app_id = "1:569027132834:android:e39ac1d600c96188a2c6fb"
firebase_token = "1//0ef3CcFU9HLwiCgYIARAAGA4SNwF-L9IrrrwKrHyk03MlaSCSdnaIY0X_EfgVEoZvYmvzbOLuiwaiA1_2Ij8TcRIUZtJKuFksq2A"

default_platform(:android)

platform :android do

  desc "build app and release to Firebase Distribution"
  lane :distribute do
    releaseFilePath = File.join(Dir.pwd, "../app", "release.keystore.jks")
    apkFilePath = File.join(Dir.pwd, "../../build/app/outputs/apk/release", "app-release.apk")

    # flutter version 설정을 위해 아래 명령어 수행
    sh("cd", "..")
    sh("flutter", "build", "appbundle")

    gradle(task: 'clean')
    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: true,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => "Password1234!@#$",
        "android.injected.signing.key.alias" => "upload",
        "android.injected.signing.key.password" => "Password1234!@#$",
      }
    )

    firebase_app_distribution(
      app: firebase_development_app_id,
      groups: "qa-team",
      release_notes: "build app and release to Firebase Distribution",
      firebase_cli_token: firebase_token,
      apk_path: apkFilePath,
      debug: true
    )
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end


  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
